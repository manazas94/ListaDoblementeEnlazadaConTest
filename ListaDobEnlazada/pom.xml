<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>mycompany</groupId>
	<artifactId>ListaDobEnlazada</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>ListaDobEnlazada</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.6.4</version>
				<executions>
					<!-- Prepara la propiedad para que el agente JaCoCo runtime será pasado 
						como argumento VM cuando el plugin maven surefire sea ejecutado. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Establece el path al archivo el cual contiene los datos de la 
								ejecución. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Establece el nombre de la propiedad que contiene la configuracion 
								del agente VM runtime JaCoCo. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Asegura que el informe de cobertura de codigo para test unitarios 
						es creado después de ejecutar los test unitarios. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Establece el path del archivo que contiene los datos de ejecución. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Establece el directorio de salida para los informes de cobertura. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.6.4</version>
				<executions>
					<!-- Las ejecuciones requeridas para test unitarios son omitidas. -->
					<!-- Prepara la propiedad para el agente runtime JaCoCo el cual es pasado 
						como argumento de la VM cuando maven failsafe sea ejecutado. -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Establece el path al archivo que contiene la información de ejecución. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
							<!-- Establece la propiedad que contiene la configuración del agente 
								JaCoCo runtime agent. -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Asegura que los informes de cobertura para los test de integración 
						seran ejecutados despues de ejecutar los test de integracion. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Establece el path al archivo que contiene los datos de ejecucion. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
							<!-- Establece el directorio de salida para los test de cobertura. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<!-- Establece el argumento VM que sera usado cuando los test unitarios 
						son ejecutados. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Salta los test unitarios cuando el valor de la propiedad skip.unit.tests 
						es true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excluye los test de integracion cuando los test unitarios son ejecutados.. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.15</version>
				<executions>
					<!-- Asegura que tanto los test de integracion y los objetivos de failsafe 
						maven plugin seran ejecutados. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Establece el argumento VM usado cuando los test de integracion 
								son ejecutados. -->
							<argLine>${failsafeArgLine}</argLine>
							<!-- Salta los test de integracion si el valor de la propiedad skip.integration.tests 
								es true -->
							<skipTests>${skip.integration.tests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
